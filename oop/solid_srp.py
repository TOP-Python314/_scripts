"""Single Responsibility Principle ‚Äî –ü—Ä–∏–Ω—Ü–∏–ø –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏"""

from datetime import datetime as dt
from pathlib import Path
from sys import path


class Journal(dict):
    """
    –í–µ–¥–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞, —Ä–∞–±–æ—Ç–∞ —Å –∑–∞–ø–∏—Å—è–º–∏.
    """
    _default_format: str = '%Y-%m-%d %H:%M:%S'
    # –∞—Ç—Ä–∏–±—É—Ç –Ω–∞—Ä—É—à–∞–µ—Ç SRP ‚Äî –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ñ—É—Ä–Ω–∞–ª–∞
    # _default_path: Path = Path(path[0]) / 'journal.log'
    
    def add_entry(self, entry: str) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ –∂—É—Ä–Ω–∞–ª."""
        self[dt.now()] = entry
    
    def __repr__(self):
        return '\n'.join(
            f'{timestamp:{self._default_format}} ‚Äî {entry}'
            for timestamp, entry in self.items()
        )
    
    # –º–µ—Ç–æ–¥ –Ω–∞—Ä—É—à–∞–µ—Ç SRP ‚Äî –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ñ—É—Ä–Ω–∞–ª–∞
    # def export_log_file(self, log_path: str | Path | None):
    #     """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞ –≤ —Ñ–∞–π–ª."""
    #     if log_path is None:
    #         log_path = self._default_path
    #     
    #     with open(log_path, 'w', encoding='utf-8') as fileout:
    #         fileout.write(self.__repr__())


# —Ä–µ—à–µ–Ω–∏–µ –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏—è SRP ‚Äî —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—É—â–Ω–æ—Å—Ç—å
class FileSystemIO:
    """
    –†–∞–±–æ—Ç–∞ —Å –ø—É—Ç—è–º–∏, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π.
    """
    _default_journal_path = Path(path[0]) / 'journal.log'
    
    @classmethod
    def export_log_file(
            cls,
            entries_representations: str,
            log_path: str | Path | None,
    ):
        """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞ –≤ —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É."""
        if log_path is None:
            log_path = cls._default_journal_path
        
        with open(log_path, 'w', encoding='utf-8') as fileout:
            fileout.write(entries_representations)
        
        return log_path

